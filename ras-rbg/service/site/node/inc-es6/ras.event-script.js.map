{"version":3,"sources":["../../src/inc/ras.event-script.js"],"names":["RasEventScript","input","objectIn","rc","param_in","replace","JSON","parse","app_id","tid","ctime","et","ud","debug","error","event_type","to_uid","user_data","result","extend","user_tag","member_srl","topic","credis","key_name","send_command","console","resolve","reject","qdata","object_name","next_function","field","user_object","data","_ctime","unix","value","expire"],"mappings":"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","file":"ras.event-script.js","sourcesContent":["import moment from \"moment\";\nimport os from \"os\";\nimport _ from \"underscore\";\nimport Promise from \"bluebird\";\nimport {inspect} from \"./ras.config\";\n\n\nclass RasEventScript {\n    constructor() {\n        this.input = \"\";\n        this.objectIn = null;\n        this.rc = \"0\";\n    }\n\n    init(param_in) {\n        // $this->mInput = str_replace(\"@#1#@\", \"'\", $input);\t\t// shell script 에서 ' 를 처리하지 못하므로, encoding 한것을 decoding 한다.\n        this.input = param_in.replace(/@#1#@/g, \"'\");\n        //console.log('@@input=', input);\n        /* script input object\n                {\n                    \"app_id\": \"admin\",\n                    \"tid\": \"1394516074955_3237\",\n                    \"ctime\": 1394516074,\n                    \"et\": \"event-test\",\n                    \"ud\": {\n                        \"data\": {\n                            \"_t\": \"MANAGE\",\n                            \"_cmd\": \"user test\"\n                        },\n                        \"user_tag\": {\n                            \"app_id\": \"admin\",\n                            \"ssid\": \"authorized\",\n                            \"ip\": \"112.216.155.226\",\n                            \"soc_id\": \"qzOTdJsPfKTq0cngMNHJ\",\n                            \"member_srl\": 0\n                        }\n                    }\n                }\n        */\n        this.objectIn = JSON.parse(input);\n        if (!this.objectIn) {\n            this.rc = \"-5100\";\n        }\n\n        return this.rc;\n    }\n\n    getAppId() {\n        return this.objectIn.app_id;\n    }\n\n    getTid() {\n        return this.objectIn.tid;\n    }\n\n    getCtime() {\n        return this.objectIn.ctime;\n    }\n\n    getEventType() {\n        return this.objectIn.et;\n    }\n\n    getUserData() {\n        return this.objectIn.ud;\n    }\n\n    makeNoAction(debug) {\n        if (debug) {\n            return JSON.stringify({\n                \"action\" :\"ACTION_NONE\",\n                \"_ras_debug\" : debug\n            });\n\n        }\n\n        return JSON.stringify({\n            \"action\" :\"ACTION_NONE\"\n        });\n    }\n\n\n    makeErrorAction(error) {\n        return JSON.stringify({\n            \"action\" :\"ACTION_ERROR\",\n            \"_ras_error\" : error\n        });\n    }\n\n    makeActionToUser(app_id, event_type, to_uid, user_data) {\n        // TODO : 2017.12.01, 아래부분 자신의 함수를 호출하는 방법에 대해서 알아볼 것.\n        // var result = {\n        //     \"app_id\": app_id,\t\t// default 로 간다.\n        //     \"et\": event_type,\t\t//\n        //     \"ud\": _.extend({\n        //         \"action\": \"ACTION_TO_USER\",\n        //         \"to_uid\": to_uid,\n        //         \"member_srl\": _this.Module.getUserData().user_tag.member_srl\n        //     }, user_data),\n        //     \"tid\": getTid(),\n        //     \"ctime\": getCtime(),\n        // };\n\n        const result = {\n            \"app_id\": app_id,\t\t// default 로 간다.\n            \"et\": event_type,\t\t//\n            \"ud\": _.extend({\n                \"action\": \"ACTION_TO_USER\",\n                \"to_uid\": to_uid,\n                \"member_srl\": this.objectIn.ud.user_tag.member_srl,\n            }, user_data),\n            \"tid\": this.objectIn.tid,\n            \"ctime\": this.objectIn.ctime,\n        };\n\n        return JSON.stringify(result);\n    }\n\n    makeActionToMQTT(app_id, topic, event_type, user_data) {\n        let result = {\n            \"app_id\": app_id,\t\t// default 로 간다.\n            \"et\": event_type,\t\t//\n            \"ud\": _.extend({\n                \"action\": \"ACTION_TO_MQTT\",\n                \"member_srl\": this.objectIn.ud.user_tag.member_srl,\n            }, user_data),\n            \"tid\": this.objectIn.tid,\n            \"ctime\": this.objectIn.ctime,\n        };\n\n        return JSON.stringify(result);\n    }\n\n    removeKey(credis, key_name) {\n        credis.send_command('del', [key_name], (error, result) => {\n            if (error) console.error('ERROR model.front-connection:change:(NOT defined,disconnect):del:' + key_name);\n        });\n    }\n\n    removeKeyPro(credis, key_name) {\n        return new Promise((resolve, reject) => {\n            credis.send_command('del', [key_name], (error, result) => {\n                if (error) {\n                    console.error('ERROR model.front-connection:change:(NOT defined,disconnect):del:' + key_name);\n                    return reject(error);\n                }\n\n                resolve(result);\n            });\n        });\n    }\n\n    pushEventQueue(credis, app_id, event_type, user_data) {\n        var qdata = {\n            \"app_id\": app_id,\t\t// default 로 간다.\n            \"pid\" : \"ES\",\n            \"et\": event_type,\t\t//\n            \"tid\": this.objectIn.tid,\n            \"ctime\": this.objectIn.ctime,\n            \"ud\": user_data,\n        };\n\n        // note 원본의 key_name 이 어디서 가져오는지 없다. 오류 발생 할듯\n        credis.send_command('rpush', [key_name, JSON.stringify(qdata)], (error, result) => {\n            // note 원본이 gv.inspect 인데....gv는 어디서 나왔나? 일단 config 의 inspect 를 사용 한다.\n            if (error) console.error('ERROR RPUSH' + key_name + inspect(error));\n        });\n    }\n\n    pushEventQueuePro(credis, app_id, event_type, user_data) {\n        var qdata = {\n            \"app_id\": app_id,\t\t// default 로 간다.\n            \"pid\" : \"ES\",\n            \"et\": event_type,\t\t//\n            \"tid\": this.objectIn.tid,\n            \"ctime\": this.objectIn.ctime,\n            \"ud\": user_data,\n        };\n\n        return new Promise((resolve, reject) => {\n            // note 원본의 key_name 이 어디서 가져오는지 없다. 오류 발생 할듯\n            credis.send_command('rpush', [key_name, JSON.stringify(qdata)], (error, result) => {\n                // note 원본이 gv.inspect 인데....gv는 어디서 나왔나? 일단 config 의 inspect 를 사용 한다.\n                if (error) {\n                    console.error('ERROR RPUSH' + key_name + inspect(error));\n                    return reject(error);\n                }\n\n                resolve(result);\n            });\n        });\n    }\n\n    // TODO : 2017.12.01, 포팅 작업 2순위\n    // function pushDelayedEvent ($credis, $app_id, $event_type, $user_data, $delay_sec) {\n    //     $key_name = 'post.' . $app_id . '.' . $event_type . '.' . $user_data;\n    //\n    //     // TODO : 이미 key 가 있다면, 다시 설정하지 않고, 별도의 알고리즘을 가져야한다.\n    //     // 1. 그냥 스킵해서 최초부터 10초 형태\n    //     // 2. 지속적인 업데이트로 최종부터 10초 형태\n    //     // 3. 특정한 스킴으로 시간을 조금씩 늘려서 최종적으로는 더 이상 연기되지 않아서 호출이 되는 형태\n    //\n    //     $ret = $credis->redis->multi()\n    // ->set($key_name, \"10\")\n    // ->expire($key_name, $delay_sec)\n    // ->exec();\n    // },\n\n    getUIObjectName(app_id, object_name) {\n        return `ui.${app_id}.${object_name}`;\n    }\n\n    //\n    // for redis functions\n    //\n    getUIObject(credis, app_id, object_name, next_function) {\n        // TODO : var key_name = $this->getUIObjectName($app_id, $object_name);\n        const key_name = `ui.${app_id}.${object_name}`;\n\n        credis.send_command('hgetall', [key_name], (error, result) => {\n            if (error) console.error('ERROR model.ui-object:hgetall', error);\n\n            //log.debug('@@' + gv.inspect(result));\n            next_function(error, result);\n        });\n    }\n\n    getUIObjectField(credis, app_id, object_name, field, next_function) {\n        // TODO : var key_name = $this->getUIObjectName($app_id, $object_name);\n        const key_name = `ui.${app_id}.${object_name}`;\n\n        credis.send_command('hget', [key_name, field], (error, result) => {\n            if (error) console.error('ERROR model.ui-object:hget', error);\n\n            //log.debug('@@' + gv.inspect(result));\n            next_function(error, result);\n        });\n    }\n\n    // INFO : UI object 를 직접 설정한다.\n    // -ui object name = 'ui.' + app_id . object_name\n    // -필드에 .ctime 이 추가된다.\n    //\n    setUIObject(credis, app_id, object_name, user_object) {\n        const key_name = `ui.${app_id}.${object_name}`,\n            data = _.extend(user_object, { _ctime : moment().unix() });\n\n        credis.send_command('hmset', [key_name, data], (error, result) => {\n            if (error) console.error('ERROR hmset:', result);\n\n            // TODO : check next func\n        });\n    }\n\n    setUIObjectPro(credis, app_id, object_name, user_object) {\n        const key_name = `ui.${app_id}.${object_name}`,\n            data = _.extend(user_object, { _ctime : moment().unix() });\n\n        return new Promise((resolve, reject) => {\n            credis.send_command('hmset', [key_name, data], (error, result) => {\n                if (error) {\n                    console.error('ERROR hmset:', result);\n                    return reject(error);\n                }\n\n                resolve(result);\n\n                // TODO : check next func\n            });\n        });\n    }\n\n    setUIObjectField(credis, app_id, object_name, field, value) {\n        const key_name = `ui.${app_id}.${object_name}`,\n            data = [];\n\n        data[field] = value;\n\n        credis.send_command('hmset', [key_name, data], (error, result) => {\n            if (error) console.error('ERROR hmset:', result);\n\n            // TODO : check next func\n        });\n    }\n\n    removeUIObject(credis, app_id, object_name) {\n        const key_name = `ui.${app_id}.${object_name}`;\n\n        credis.send_command('del', [key_name], (error, result) => {\n            if (error) console.error('ERROR del:', result);\n\n            // TODO : check next func\n        });\n    }\n\n    expireUIObject(credis, app_id, object_name, expire) {\n        const key_name = `ui.${app_id}.${object_name}`;\n\n        credis.send_command('del', [key_name, expire], function (error, result) {\n            if (error) console.error('ERROR expire:', result);\n\n            // TODO : check next func\n        });\n    }\n\n    getConfigObjectName(app_id, object_name) {\n        return `config.${app_id}.${object_name}`;\n    }\n\n    getConfigObject(credis, app_id, object_name, next_function) {\n        const key_name = `config.${app_id}.${object_name}`;\n\n        credis.send_command('hgetall', [key_name], (error, result) => {\n            if (error) console.error('ERROR model.ui-object:hgetall', error);\n\n            //log.debug('@@' + gv.inspect(result));\n            next_function(error, result);\n        });\n    }\n}\n\nexport default RasEventScript;"]}